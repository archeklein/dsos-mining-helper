{"version":3,"sources":["useLongPress.js","components/MineTile.js","components/Wrappers.js","App.js","index.js"],"names":["preventDefault","event","isTouchEvent","touches","length","useLongPress","onLongPress","onClick","shouldPreventDefault","delay","useState","longPressTriggered","setLongPressTriggered","timeout","useRef","target","start","useCallback","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","e","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","Tile","styled","div","MineTile","props","resource","putResource","putLadder","className","toUpperCase","Header","MainWrapper","GridWrapper","App","defaultState","Array","from","v","i","tiles","setTiles","actions","setActions","ButtonGroup","variant","color","Button","slice","id","oldValue","prevState","disabled","ArrowBack","map","tile","find","ArrowForward","index","newMarker","concat","newValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68d2dcf4.chunk.js","sourcesContent":["import { useCallback, useRef, useState } from \"react\";\r\n\r\nconst useLongPress = (\r\n    onLongPress,\r\n    onClick,\r\n    { shouldPreventDefault = true, delay = 200 } = {}\r\n    ) => {\r\n    const [longPressTriggered, setLongPressTriggered] = useState(false);\r\n    const timeout = useRef();\r\n    const target = useRef();\r\n\r\n    const start = useCallback(\r\n        event => {\r\n            if (shouldPreventDefault && event.target) {\r\n                    event.target.addEventListener(\"touchend\", preventDefault, {\r\n                    passive: false\r\n                });\r\n                target.current = event.target;\r\n            }\r\n            timeout.current = setTimeout(() => {\r\n                onLongPress(event);\r\n                setLongPressTriggered(true);\r\n            }, delay);\r\n        },\r\n        [onLongPress, delay, shouldPreventDefault]\r\n    );\r\n\r\n    const clear = useCallback(\r\n        (event, shouldTriggerClick = true) => {\r\n            timeout.current && clearTimeout(timeout.current);\r\n            shouldTriggerClick && !longPressTriggered && onClick();\r\n            setLongPressTriggered(false);\r\n            if (shouldPreventDefault && target.current) {\r\n                target.current.removeEventListener(\"touchend\", preventDefault);\r\n            }\r\n        },\r\n        [shouldPreventDefault, onClick, longPressTriggered]\r\n    );\r\n\r\n    return {\r\n        onMouseDown: e => start(e),\r\n        onTouchStart: e => start(e),\r\n        onMouseUp: e => clear(e),\r\n        onMouseLeave: e => clear(e, false),\r\n        onTouchEnd: e => clear(e)\r\n    };\r\n};\r\n\r\nconst isTouchEvent = event => {\r\nreturn \"touches\" in event;\r\n};\r\n\r\nconst preventDefault = event => {\r\nif (!isTouchEvent(event)) return;\r\n\r\nif (event.touches.length < 2 && event.preventDefault) {\r\n    event.preventDefault();\r\n}\r\n};\r\n\r\nexport default useLongPress;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useLongPress from \"../useLongPress\";\r\n\r\nconst Tile = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    background-color: #ffeedb;\r\n    font-weight: bold;\r\n    font-size: 1.5em;\r\n\r\n    &.resource {\r\n        background-color: #ed9b40;\r\n    }\r\n\r\n    &.gem {\r\n        background-color: #61c9a8;\r\n    }\r\n\r\n    &.ladder {\r\n        background-color: #ba3b46;\r\n        color: white;\r\n    }\r\n\r\n    &.previous {\r\n        background-color: lightgray;\r\n    }\r\n`;\r\n\r\nexport const MineTile = (props) => {\r\n    const { resource, putResource, putLadder } = props;\r\n\r\n    const onLongPress = useLongPress(putLadder, putResource);\r\n\r\n    return (\r\n        <Tile {...onLongPress} className={resource}>\r\n            {resource !== \"none\" && resource[0].toUpperCase()}\r\n        </Tile>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media (max-width: 400px) {\r\n        flex-direction: column;\r\n        & > *:not(:first-child) {\r\n            margin-top: 8px;\r\n        }\r\n    }\r\n`\r\n\r\nexport const MainWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-rows: min-content 1fr;\r\n    grid-gap: 16px;\r\n    padding: 16px;\r\n    height: calc(100vh - 32px);\r\n`\r\n\r\nexport const GridWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(7, 1fr);\r\n    grid-template-rows: repeat(7, 1fr);\r\n    grid-gap: 16px;\r\n\r\n    @media (max-width: 600px) and (orientation:portrait), @media (max-width: 1000px) and (orientation:landscape) {\r\n        grid-gap: 4px;\r\n    }\r\n\r\n    height: calc(100vw - 32px);\r\n    @media (orientation:landscape) {\r\n        height: auto;\r\n    }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { MineTile } from \"./components/MineTile\";\r\nimport { GridWrapper, Header, MainWrapper } from \"./components/Wrappers\";\r\nimport { Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { ArrowForward, ArrowBack } from \"@material-ui/icons\";\r\n\r\nconst App = () => {\r\n    const defaultState = Array.from({ length: 49 }, (v, i) => \"none\");\r\n\r\n    const [tiles, setTiles] = useState(defaultState);\r\n    const [actions, setActions] = useState([]);\r\n\r\n    const putResource = (id) => {\r\n        setTiles((prevState) => {\r\n            let newMarker = \"none\";\r\n\r\n            if (prevState[id] === \"none\" || prevState[id] === \"ladder\") {\r\n                newMarker = \"resource\";\r\n            }\r\n\r\n            if (prevState[id] === \"resource\") {\r\n                newMarker = \"gem\";\r\n            }\r\n\r\n            setActions(\r\n                actions.concat({\r\n                    id,\r\n                    oldValue: prevState[id],\r\n                    newValue: newMarker,\r\n                })\r\n            );\r\n\r\n            return [\r\n                ...prevState.slice(0, id),\r\n                newMarker,\r\n                ...prevState.slice(id + 1, prevState.length),\r\n            ];\r\n        });\r\n    };\r\n\r\n    const putLadder = (id) => {\r\n        setTiles((prevState) => {\r\n            setActions(\r\n                actions.concat({\r\n                    id,\r\n                    oldValue: prevState[id],\r\n                    newValue: \"ladder\",\r\n                })\r\n            );\r\n\r\n            return [\r\n                ...prevState.slice(0, id),\r\n                \"ladder\",\r\n                ...prevState.slice(id + 1, prevState.length),\r\n            ];\r\n        });\r\n    };\r\n\r\n    const nextFloor = () => {\r\n        setTiles((prevState) => {\r\n            return [\r\n                ...prevState.map((tile) =>\r\n                    tile === \"ladder\" ? \"previous\" : \"none\"\r\n                ),\r\n            ];\r\n        });\r\n        setActions([]);\r\n    };\r\n\r\n    const undo = () => {\r\n        const { id, oldValue } = actions.slice(-1)[0];\r\n\r\n        setTiles((prevState) => {\r\n            return [\r\n                ...prevState.slice(0, id),\r\n                oldValue,\r\n                ...prevState.slice(id + 1, prevState.length),\r\n            ];\r\n        });\r\n\r\n        setActions(actions.slice(0, -1));\r\n    };\r\n\r\n    return (\r\n        <MainWrapper>\r\n            <Header>\r\n                <ButtonGroup variant=\"outlined\" color=\"primary\">\r\n                    <Button onClick={undo} disabled={actions.length === 0}>\r\n                        <ArrowBack />\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            setTiles(defaultState);\r\n                            setActions([]);\r\n                        }}\r\n                    >\r\n                        <b>Reset</b>\r\n                    </Button>\r\n                    <Button\r\n                        onClick={nextFloor}\r\n                        disabled={!tiles.find((tile) => tile === \"ladder\")}\r\n                    >\r\n                        <ArrowForward />\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Header>\r\n            <GridWrapper>\r\n                {tiles.map((tile, index) => (\r\n                    <MineTile\r\n                        key={index}\r\n                        resource={tile}\r\n                        putResource={() =>\r\n                            tile !== \"previous\" && putResource(index)\r\n                        }\r\n                        putLadder={() => putLadder(index)}\r\n                    />\r\n                ))}\r\n            </GridWrapper>\r\n        </MainWrapper>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}